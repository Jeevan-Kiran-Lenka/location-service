# Server
server.port=8080
spring.application.name=location-service

# Actuator
management.endpoints.web.exposure.include=health,info,metrics

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=location-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka Configuration
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Add these properties to fix deserialization issue
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.tonight.location_service.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.tonight.location_service.model.LocationUpdate

# application.properties or application.yml

# Kafka Consumer Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=location-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.request.timeout.ms=60000
spring.kafka.consumer.properties.default.api.timeout.ms=60000
spring.kafka.consumer.properties.max.poll.interval.ms=300000

# Kafka Producer Configuration (if needed)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.request.timeout.ms=60000

# Increase timeouts to handle Docker container startup delays
spring.kafka.properties.connections.max.idle.ms=300000
spring.kafka.properties.request.timeout.ms=60000

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379